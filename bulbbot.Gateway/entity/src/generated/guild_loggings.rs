//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "guild_loggings")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub guild_id: String,
    pub mod_action: Option<String>,
    pub auto_mod: Option<String>,
    pub message: Option<String>,
    pub role: Option<String>,
    pub member: Option<String>,
    pub channel: Option<String>,
    pub thread: Option<String>,
    pub join_leave: Option<String>,
    pub invite: Option<String>,
    pub banpool: Option<String>,
    pub other: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::guilds::Entity",
        from = "Column::GuildId",
        to = "super::guilds::Column::GuildId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Guilds,
}

impl Related<super::guilds::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Guilds.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
