//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "guildConfigurations")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub language: String,
    #[sea_orm(column_name = "premiumGuild")]
    pub premium_guild: bool,
    #[sea_orm(column_name = "createdAt")]
    pub created_at: DateTimeWithTimeZone,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: DateTimeWithTimeZone,
    pub autorole: Option<String>,
    pub timezone: String,
    #[sea_orm(column_name = "actionsOnInfo")]
    pub actions_on_info: bool,
    #[sea_orm(column_name = "rolesOnLeave")]
    pub roles_on_leave: bool,
    #[sea_orm(column_name = "quickReasons")]
    pub quick_reasons: Option<Vec<String>>,
    #[sea_orm(column_name = "manualNicknameInf")]
    pub manual_nickname_inf: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::guilds::Entity",
        from = "Column::Id",
        to = "super::guilds::Column::GuildConfigurationId"
    )]
    Guilds,
}

impl Related<super::guilds::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Guilds.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
