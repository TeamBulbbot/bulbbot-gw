//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "guilds")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_name = "guildId")]
    pub guild_id: String,
    pub name: String,
    #[sea_orm(column_name = "createdAt")]
    pub created_at: DateTimeWithTimeZone,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: DateTimeWithTimeZone,
    #[sea_orm(column_name = "guildConfigurationId")]
    pub guild_configuration_id: i32,
    #[sea_orm(column_name = "guildLoggingId")]
    pub guild_logging_id: i32,
    #[sea_orm(column_name = "automodId")]
    pub automod_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::guild_configurations::Entity")]
    GuildConfigurations,
    #[sea_orm(has_one = "super::guild_loggings::Entity")]
    GuildLoggings,
}

impl Related<super::guild_configurations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GuildConfigurations.def()
    }
}

impl Related<super::guild_loggings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GuildLoggings.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
